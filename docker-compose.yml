version: '3.8'

services:
  db:
    image: postgres:16-alpine
    environment:
      POSTGRES_DB: healthcare
      POSTGRES_USER: admin
    secrets:
      - postgres-password
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin"]
      interval: 10s
      timeout: 5s
      retries: 5
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 512M

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
      args:
        - NODE_ENV=production
    environment:
      NODE_ENV: production
      DB_HOST: db
      DB_PORT: 5432
      DB_NAME: healthcare
      DB_USER: admin
    secrets:
      - postgres-password
      - jwt-private-key
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "3001:3001"
    healthcheck:
      test: ["CMD", "node", "healthcheck.js"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 1G
      restart_policy:
        condition: on-failure
        max_attempts: 3

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      - backend
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080"]
      interval: 30s
      timeout: 5s
      retries: 3
    deploy:
      resources:
        limits:
          cpus: '0.75'
          memory: 256M
      restart_policy:
        condition: on-failure

volumes:
  postgres-data:

secrets:
  postgres-password:
    file: ./secrets/postgres_password.txt
  jwt-private-key:
    file: ./secrets/jwt_private_key.pem